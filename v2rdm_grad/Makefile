#
#@BEGIN LICENSE
#
# . by Psi4 Developer, a plugin to:
#
# PSI4: an ab initio quantum chemistry software package
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#@END LICENSE
#

#
# Plugin Makefile generated by Psi4.
#
# You shouldn't need to modify anything in this file.
#

# The name of your plugin. Taken from the directory name.
NAME = $(shell basename `pwd`)

# C++ source files for your plugin. By default we grab all *.cc files.
CXXSRC = $(notdir $(wildcard *.cc))

# Flags that were used to compile Psi4.
CXX = /usr/bin/g++
CXXDEFS = -DHAVE_DKH -DHAVE_SYSTEM_NATIVE_LAPACK -DHAVE_SYSTEM_NATIVE_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_LIB_REGEX -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H
CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O0 -g3 -DDEBUG -Wall -Wextra -Winit-self -Woverloaded-virtual -Wuninitialized -Wmissing-declarations -Wwrite-strings
LDFLAGS = 
INCLUDES = -I/home/jacob/softwares/valgrind/psi4public-master/build/src/lib -I/home/jacob/softwares/valgrind/psi4public-master/src/lib -I/home/jacob/softwares/valgrind/psi4public-master/include -I/home/jacob/softwares/valgrind/psi4public-master/build/include -I/home/jacob/softwares/valgrind/psi4public-master/build/boost/include -I/usr/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include
OBJDIR = /home/jacob/softwares/valgrind/psi4public-master/build

# Used to determine linking flags.
UNAME = $(shell uname)

# Need to link against Psi4 plugin library
PSIPLUGIN = -L$(OBJDIR)/lib -lplugin

DEPENDINCLUDE = $(notdir $(wildcard *.h*))

PSITARGET = $(NAME).so

# Start the compilation rules
default:: $(PSITARGET)

# Add the flags needed for shared library creation
ifeq ($(UNAME), Linux)
    LDFLAGS += -L/usr/bin/gcc-4.9 -lgfortran -shared
endif
ifeq ($(UNAME), Darwin)
    LDFLAGS += -L/usr/bin/gcc-4.9 -lgfortran -shared -undefined dynamic_lookup
    CXXFLAGS += -fno-common
endif

# The object files
BINOBJ = *.o $(CXXSRC:%.cc=%.o)

# fortran tuff
#F90       = ifort
#F90FLAGS  = -O3 -openmp -fPIC -DOMP -DBLAS
#LDFLAGS  += -lifcore
F90       = gfortran
F90FLAGS  = -g -C -fPIC
LDFLAGS  += -lgfortran
F90SRC    = $(notdir $(wildcard *.F90))
F90BINOBJ = $(F90SRC:%.F90=%.o)

fortran:
	$(F90) $(F90FLAGS) focas_data.F90 -c
	$(F90) $(F90FLAGS) focas_gradient.F90 focas_data.o -c
	$(F90) $(F90FLAGS) focas_energy.F90 focas_data.o -c
	$(F90) $(F90FLAGS) focas_hessian.F90 focas_data.o -c
	$(F90) $(F90FLAGS) focas_exponential.F90 focas_data.o -c
	$(F90) $(F90FLAGS) focas_transform_teints.F90 focas_data.o -c
	$(F90) $(F90FLAGS) focas_transform_oeints.F90 focas_data.o -c
	$(F90) $(F90FLAGS) focas_transform_driver.F90 focas_transform_teints.o focas_transform_oeints.o -c
	$(F90) $(F90FLAGS) focas_driver.F90 focas_exponential.o focas_transform_driver.o focas_energy.o focas_gradient.o focas_hessian.o -c
	$(F90) $(F90FLAGS) focas_interface.F90 focas_driver.o -c
	rm *.mod

%.o: %.F90
	$(F90) $(F90FLAGS) -c $<

%.o: %.cc
	$(CXX) $(CXXDEFS) $(CXXFLAGS) $(INCLUDES) -c $<

$(PSITARGET): $(BINOBJ) $(F90BINOBJ)
	$(CXX) $(LDFLAGS) -o $@ $^ $(CXXDEFS) $(PSIPLUGIN)

# Erase all compiled intermediate files
clean:
	rm -f $(F90BINOBJ) $(BINOBJ) $(PSITARGET) *.d *.pyc *.test output.dat psi.timer.dat


